/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef, useEffect } from 'react';
import { useGLTF, useVideoTexture } from '@react-three/drei';
import gsap from 'gsap';
import { useGSAP } from '@gsap/react';

const DemoComputer = (props) => {
    const group = useRef();
    const { nodes, materials } = useGLTF('/models/computer.glb');

    const txt = useVideoTexture(props.texture ? props.texture : '/textures/project/project1.mp4');

    useEffect(() => {
        if(txt) {
            txt.flipY=true;
        };
    }, [txt]);

    useGSAP(() => {
        gsap.from(group.current.rotation, {
            y: Math.PI / 2,
            duration: 1,
            ease: 'power3.out'
        });
    }, [txt]);

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                    <mesh
                        // castShadow
                        // receiveShadow
                        geometry={nodes.Screen_ComputerScreen_0.geometry}
                        material={materials.ComputerScreen}
                        position={[0, 0.65, -10.3]}
                        rotation={[Math.PI, 0, -Math.PI]}
                        scale={[100, 100, 88.235]}>
                        <meshBasicMaterial map={txt} toneMapped={false} />
                    </mesh>
                <group name="RootNode">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Frame_ComputerFrame_0.geometry}
                        material={materials.ComputerFrame}
                        position={[0, 0.976, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        scale={100}
                    />
                </group>
            </group>
        </group>
    );
};

useGLTF.preload('/models/computer.glb');

export default DemoComputer;